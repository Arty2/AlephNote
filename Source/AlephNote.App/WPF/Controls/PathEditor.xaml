<UserControl x:Class="AlephNote.WPF.Controls.PathEditor"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:self="clr-namespace:AlephNote.WPF.Controls"
			 xmlns:conv="clr-namespace:MSHC.WPF.Converter;assembly=CSharpUtils"
			 xmlns:ext="clr-namespace:AlephNote.WPF.Extensions"
			 mc:Ignorable="d" 
			 d:DesignHeight="40" d:DesignWidth="100">

	<UserControl.Resources>
		<conv:MultiBoolToVisibility x:Key="MB2V" />
		<conv:MultiBoolOperator     x:Key="MBOP" />
	</UserControl.Resources>
	
	<Grid x:Name="MainGrid" d:DataContext="{d:DesignInstance self:PathEditor}">
		
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>

		<ItemsControl Grid.Column="0" ItemsSource="{Binding SelectedNote.Path.ListProperty}" Margin="0,0,0,4" MinHeight="20">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<StackPanel Orientation="Horizontal">
						<Border CornerRadius="4" BorderThickness="1" BorderBrush="{ext:ThemeBinding 'window.pathdisplay.element:border'}" Padding="4,1" Margin="0,0,5,0">
							<Border.Style>
								<Style TargetType="{x:Type Border}">
									<Setter Property="Background" Value="{ext:ThemeBinding 'window.pathdisplay.element:background'}"/>
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background" Value="{ext:ThemeBinding 'window.pathdisplay.element:background_hover'}"/>
										</Trigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<TextBlock Text="{Binding .}" Foreground="{ext:ThemeBinding 'window.pathdisplay.element:foregroud'}"/>
						</Border>
						<TextBlock Text="/" Margin="0,0,5,0" Foreground="{ext:ThemeBinding 'window.pathdisplay:foregroud'}"/>
					</StackPanel>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>

		<Button Grid.Column="1" Content="..." Margin="2,0" MinWidth="30" VerticalAlignment="Center" 
						Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
						Foreground="{ext:ThemeBinding 'window.pathdisplay.button:foreground'}" 
						Background="{ext:ThemeBinding 'window.pathdisplay.button:background'}" 
						BorderBrush="{ext:ThemeBinding 'window.pathdisplay.button:border'}" 
						Command="{Binding ChangePathCommand}" >
			<Button.IsEnabled>
				<MultiBinding Converter="{StaticResource MBOP}" ConverterParameter="NOR">
					<Binding Path="Settings.IsReadOnlyMode" />
					<Binding Path="SelectedNote.IsLocked" />
				</MultiBinding>
			</Button.IsEnabled>
		</Button>

		<Popup Grid.Column="1" StaysOpen="False" Placement="Right" x:Name="FolderPopup">
			<Border BorderThickness="{ext:ThemeBinding 'window.pathdisplay.popup:border_thickness'}" BorderBrush="{ext:ThemeBinding 'window.pathdisplay.popup:border'}">
				<Grid Background="{ext:ThemeBinding 'window.pathdisplay.popup:background'}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.Resources>
							<Style TargetType="{x:Type ListViewItem}">
								<Setter Property="Background" Value="Transparent"/>
								<Setter Property="Padding" Value="2,0,0,0"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type ListViewItem}">
											<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
												<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsSelected" Value="true">
													<Setter Property="Background" TargetName="Bd" Value="{ext:ThemeBinding 'window.pathdisplay.popup.list.selected:background'}"/>
													<Setter Property="Foreground"                 Value="{ext:ThemeBinding 'window.pathdisplay.popup.list.selected:foreground'}"/>
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
					</Grid.Resources>

					<TextBlock  Grid.Row="0" 
									Text="Move Note" FontWeight="Bold" HorizontalAlignment="Center" FontSize="16" 
									Foreground="{ext:ThemeBinding 'window.pathdisplay.popup.text:foreground'}"/>

					<ListView   Grid.Row="1" x:Name="FolderPopupListView" 
									Foreground="{ext:ThemeBinding 'window.pathdisplay.popup.list:foreground'}"
									Background="{ext:ThemeBinding 'window.pathdisplay.popup.list:background'}"
									DisplayMemberPath="Formatted" MaxHeight="200" Margin="2" />

					<StackPanel Grid.Row="2">
						<Button Content="Move" MinWidth="200" FontWeight="Bold" Click="ButtonMoveFolder_OnClick" 
									Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
									Foreground="{ext:ThemeBinding  'window.pathdisplay.popup.button:foreground'}" 
									Background="{ext:ThemeBinding  'window.pathdisplay.popup.button:background'}" 
									BorderBrush="{ext:ThemeBinding 'window.pathdisplay.popup.button:border'}" 
									HorizontalAlignment="Center" Margin="2" />
					</StackPanel>
				</Grid>
			</Border>
		</Popup>

	</Grid>
</UserControl>
