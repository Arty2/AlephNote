<UserControl x:Class="AlephNote.WPF.Controls.TagEditor2"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:self="clr-namespace:AlephNote.WPF.Controls"
			 xmlns:conv="clr-namespace:MSHC.WPF.Converter;assembly=CSharpUtils"
			 xmlns:locconv="clr-namespace:AlephNote.WPF.Converter"
			 xmlns:ext="clr-namespace:AlephNote.WPF.Extensions"
			 xmlns:tki="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
			 mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>

			<SolidColorBrush x:Key="HighlightBrush" Color="{ext:ThemeBinding 'window.tageditor.tag:highlight', Convert='ToColor'}" />

			<Grid Background="Transparent" x:Key="PlaceholderPanel" x:Shared="false" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<StackPanel Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
					<Label Visibility="{Binding Path=HasItems, Converter={conv:InvertedBoolToVisibility}, RelativeSource={RelativeSource AncestorType={x:Type self:TokenizedTagControl}}}" 
						   x:Name="PART_Placeholder" 
						   Padding="3,0,0,0"
						   Content="{Binding Path=Placeholder, RelativeSource={RelativeSource AncestorType={x:Type self:TokenizedTagControl}} }" 
						   FontSize="12" Foreground="{ext:ThemeBinding 'window.tageditor.placeholder'}" />
				</StackPanel>
			</Grid>

			<Style TargetType="{x:Type self:TokenizedTagControl}">
				<Style.Resources>
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
					<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" />
					<LinearGradientBrush x:Key="IconBrush" EndPoint="0,1">
						<GradientStop Color="#5890f0" Offset="0" />
						<GradientStop Color="#0351d7" Offset="1" />
					</LinearGradientBrush>
				</Style.Resources>
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="MinHeight" Value="24" />
				<Setter Property="SnapsToDevicePixels" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type self:TokenizedTagControl}">
							<Grid>
								<Border x:Name="PART_ControlBorder" 
										Margin="0,1" Padding="0" 
										BorderBrush="{TemplateBinding BorderBrush}" 
										BorderThickness="{TemplateBinding BorderThickness}" 
										Background="{TemplateBinding Background}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>

										<Button Content="{StaticResource PlaceholderPanel}" Grid.Row="0" Grid.Column="0" x:Name="PART_CreateTagButton" 
												HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

											<Button.Template>
												<ControlTemplate TargetType="Button">
													<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Cursor" Value="IBeam" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Button.Template>

										</Button>

										<ItemsPresenter Grid.Row="0" Grid.Column="0"/>
									</Grid>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEditing" Value="True">
									<Setter TargetName="PART_CreateTagButton" Property="Visibility" Value="Collapsed" />
									<Setter TargetName="PART_ControlBorder" Property="BorderBrush" Value="Black" />
								</Trigger>
								<Trigger Property="IsReadonly" Value="True">
									<Setter TargetName="PART_CreateTagButton" Property="Visibility" Value="Collapsed" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="ItemContainerStyle">
					<Setter.Value>
						<Style TargetType="{x:Type ListBoxItem}">
							<Setter Property="FocusVisualStyle" Value="{x:Null}" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							<Setter Property="VerticalContentAlignment" Value="Stretch"/>
							<Setter Property="Padding" Value="2"/>
						</Style>
					</Setter.Value>
				</Setter>
				<Setter Property="ItemsPanel" >
					<Setter.Value>
						<ItemsPanelTemplate>
							<WrapPanel VerticalAlignment="Center" />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style TargetType="{x:Type self:TokenizedTagItem}">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="VerticalContentAlignment" Value="Stretch" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type self:TokenizedTagItem}">
							<Button x:Name="PART_TagButton" Content="{TemplateBinding Text}" Margin="0,0,0,1" Padding="0">
								<Button.Style>
									<Style TargetType="Button">
										<Setter Property="Foreground" Value="{ext:ThemeBinding 'window.tageditor.tag:foreground', Proxy=True}" />
									</Style>
								</Button.Style>
								<Button.Template>
									<ControlTemplate TargetType="Button">
										<Border x:Name="PART_TagBorder" 
												VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
												BorderBrush="{ext:ThemeSlaveBinding {Binding Text, Converter={locconv:TagToBorderBrush}}}" 
												BorderThickness="1" 
												Margin="{TemplateBinding Margin}" 
												Padding="3,0,0,0" Background="{ext:ThemeBinding 'window.tageditor.tag:background'}" 
												CornerRadius="{ext:ThemeBinding 'window.tageditor.tag:borderradius'}">

											<Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>

												<ContentPresenter Grid.Column="0" 
																  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />

												<Button x:Name="PART_DeleteTagButton" Grid.Column="1"  Margin="3,0" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Hidden"  >
													<Button.Template>
														<ControlTemplate>
															<Grid Height="10" Width="10" Background="#01FFFFFF">
																<Path Stretch="Uniform" 
																	  ClipToBounds="True" 
																	  Stroke="{StaticResource HighlightBrush}" 
																	  StrokeThickness="2" 
																	  Data="M 85.364473,6.9977109 6.0640998,86.29808 6.5333398,85.76586 M 6.9926698,7.4977169 86.293043,86.79809 85.760823,86.32885"  />
															</Grid>
														</ControlTemplate>
													</Button.Template>
												</Button>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding Path=DataContext.Readonly, RelativeSource={RelativeSource AncestorType={x:Type self:TokenizedTagControl}}}" Value="False" />
													<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<MultiDataTrigger.Setters>
													<Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
													<Setter TargetName="PART_DeleteTagButton" Property="Visibility" Value="Visible" />
												</MultiDataTrigger.Setters>
											</MultiDataTrigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Button.Template>
							</Button>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsEditing" Value="True">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type self:TokenizedTagItem}">
									<tki:AutoCompleteBox x:Name="PART_InputBox"
													 Margin="0" Padding="0" VerticalAlignment="Center"
													 Background="Transparent"
													 Foreground="{ext:ThemeBinding 'window.tageditor.tag:foreground'}"
													 Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
													 ItemsSource="{Binding DropDownTags, RelativeSource={RelativeSource AncestorType={x:Type self:TokenizedTagControl}}}"
													 BorderBrush="Transparent"
													 BorderThickness="0"
													 IsTextCompletionEnabled="False"
													 FilterMode="ContainsOrdinal">

										<tki:AutoCompleteBox.ItemContainerStyle>
											<Style TargetType="{x:Type ListBoxItem}">
												<Setter Property="BorderBrush" Value="{ext:ThemeBinding 'window.tageditor.popup:bordercolor', Proxy=True}" />
												<Setter Property="Foreground"  Value="{ext:ThemeBinding 'window.tageditor.popup:foreground',  Proxy=True}" />
												<Setter Property="Background"  Value="{ext:ThemeBinding 'window.tageditor.popup:background',  Proxy=True}" />
												<Setter Property="BorderThickness" Value="0,0,0,1" />
											</Style>
										</tki:AutoCompleteBox.ItemContainerStyle>

									</tki:AutoCompleteBox>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>
			
		</ResourceDictionary>
	</UserControl.Resources>


	<Grid x:Name="MainGrid" d:DataContext="{d:DesignInstance self:TagEditor2}">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>


		<Button Grid.Row="0" Grid.Column="0" Margin="2" Padding="0" FontWeight="Bold" x:Name="TagChoosePopupButton"
				Focusable="False"
		        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
		        Foreground="{ext:ThemeBinding 'window.tageditor.tagbutton:foreground'}" 
		        Background="{ext:ThemeBinding 'window.tageditor.tagbutton:background'}" 
		        BorderThickness="{ext:ThemeBinding 'window.tageditor.tagbutton:border_thickness'}"
		        BorderBrush="{ext:ThemeBinding 'window.tageditor.tagbutton:border'}" 
		        Visibility="{Binding Settings.ShowTagButton, Converter={conv:BoolToVisibility}, ConverterParameter=Visible;Collapsed}"
				IsEnabled="{Binding Readonly, Converter={conv:NegateBool}}"
		        Command="{Binding ShowTagChooserCommand}">
			<Image Grid.Column="0" Source="{ext:ThemeBinding 'tag.png', ResType='ImageSource'}" Margin="2" />
		</Button>


		<self:TokenizedTagControl x:Name="TagCtrl"
		                          Grid.Column="1"
		                          Grid.Row="0"
		                          VerticalAlignment="Center"
		                          IsReadonly="{Binding Readonly}"
		                          EnteredTags="{Binding TagSource, Mode=TwoWay}" 
		                          TagListChanged="TokenizedTagControl_OnChange" >

			<self:TokenizedTagControl.Resources>
				<Style TargetType="ListBoxItem">
					<Setter Property="HorizontalContentAlignment" Value="Left" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
				</Style>
			</self:TokenizedTagControl.Resources>

			<self:TokenizedTagControl.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="HorizontalContentAlignment" Value="Left" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
				</Style>
			</self:TokenizedTagControl.ItemContainerStyle>

		</self:TokenizedTagControl>


		<Popup Grid.Row="0" Grid.Column="0" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=TagChoosePopupButton}" x:Name="TagChoosePopup" AllowsTransparency="True">
			<Border 
				Padding="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:padding'}" 
				Margin="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:margin'}" 
				Background="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:background'}" 
				BorderBrush="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:bordercolor'}"
				BorderThickness="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:border_thickness'}">
				<ScrollViewer MaxHeight="200" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
					<ItemsControl Width="200" x:Name="TagChoosePopupList">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel Orientation="Vertical" Background="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:background'}" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<CheckBox Content="{Binding Name}" IsChecked="{Binding Checked}" Foreground="{ext:ThemeBinding 'window.tageditor.tagbutton.popup:foreground'}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</ScrollViewer>
			</Border>
		</Popup>

	</Grid>

</UserControl>



