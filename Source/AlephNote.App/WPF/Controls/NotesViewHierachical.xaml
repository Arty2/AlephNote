<UserControl x:Class="AlephNote.WPF.Controls.NotesViewHierachical"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:self="clr-namespace:AlephNote.WPF.Controls"
			 xmlns:conv="clr-namespace:AlephNote.WPF.Converter"
			 xmlns:util="clr-namespace:AlephNote.WPF.Util"
			 xmlns:services="clr-namespace:AlephNote.WPF.Services"
			 xmlns:pi="clr-namespace:AlephNote.PluginInterface;assembly=AlephNote.PluginInterface"
			 xmlns:settings="clr-namespace:AlephNote.Common.Settings.Types;assembly=AlephNote.Common"
			 mc:Ignorable="d" 
			 d:DesignHeight="300" d:DesignWidth="150">
	
	<UserControl.Resources>
		<Style TargetType="{x:Type ListViewItem}">
			<Setter Property="Background" Value="Transparent"/>
			<!--<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
			<!--<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>-->
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListViewItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

	<Grid x:Name="RootGrid" d:DataContext="{d:DesignInstance self:NotesViewHierachical}" >
		
		<Grid.RowDefinitions>
			<RowDefinition Height="{Binding NotesViewFolderHeight, Mode=TwoWay}" MinHeight="20" />
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"  MinHeight="20" />
		</Grid.RowDefinitions>
		
		<TreeView x:Name="FolderTreeView" Grid.Row="0"
				  ItemsSource="{Binding DisplayItems.SubFolder}"
				  FontSize="{Binding Settings.ListFontSize, Converter={conv:FontSizeToInt}}" 
				  FontFamily="{Binding Settings.ListFontFamily, Converter={conv:FontNameToFontFamily}}" 
				  FontWeight="{Binding Settings.ListFontModifier, Converter={conv:FontModifierToFontWeight}}" 
				  FontStyle="{Binding Settings.ListFontModifier, Converter={conv:FontModifierToFontStyle}}"
				  PreviewMouseRightButtonDown="FolderTreeView_OnPreviewMouseRightButtonDown"
				  SelectedItemChanged="TreeView_SelectedItemChanged">
			
			<TreeView.Resources>

				<Style TargetType="{x:Type TreeViewItem}">
					<Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
					<Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />

					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<self:AutoActionMenuItem Header="Rename folder" AlephAction="RenameFolder" ParentAnchor="{Binding ParentAnchor}" />
								<self:AutoActionMenuItem Header="Delete folder" AlephAction="DeleteFolder" ParentAnchor="{Binding ParentAnchor}" />
								<self:AutoActionMenuItem Header="Add subfolder" AlephAction="AddSubFolder" ParentAnchor="{Binding ParentAnchor}" />
							</ContextMenu>
						</Setter.Value>
					</Setter>
					
				</Style>

				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}" />
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
				
			</TreeView.Resources>

			<TreeView.ContextMenu>
				<ContextMenu>
					<self:AutoActionMenuItem Header="Add folder" AlephAction="AddFolder" ParentAnchor="{Binding ParentAnchor}" />
				</ContextMenu>
			</TreeView.ContextMenu>
			
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding SubFolder}" DataType="{x:Type util:HierachicalFolderWrapper}">

					<StackPanel Orientation="Horizontal">
						<Image Width="16" Height="16" Margin="2" Stretch="Fill" Source="/Resources/folder_all.png" Visibility="{Binding IsAllVisible}"/>
						<Image Width="16" Height="16" Margin="2" Stretch="Fill" Source="/Resources/folder_any.png" Visibility="{Binding IsNotAllVisible}"/>
						<TextBlock Text="{Binding Header}" />
					</StackPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
			
		</TreeView>

		<GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="3" Focusable="False"/>

		<ListView x:Name="HierachicalNotesList" Grid.Row="2"
					  AllowDrop="True"
					  Drop="HierachicalNotesList_Drop"
					  KeyDown="HierachicalNotesList_KeyDown"
					  services:MultiDataTemplateService.MultiDataTemplateSelector="{Binding Settings.NotePreviewStyle}"
					  HorizontalContentAlignment="Stretch"
					  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					  ScrollViewer.CanContentScroll="{Binding Settings.SmoothScrollNotesView, Converter={conv:NegateBool}}"
					  SelectionMode="Single"
					  ItemsSource="{Binding SelectedFolder.AllSubNotes}" 
					  SelectedValue="{Binding SelectedNote}"
					  FontSize="{Binding Settings.ListFontSize, Converter={conv:FontSizeToInt}}" 
					  FontFamily="{Binding Settings.ListFontFamily, Converter={conv:FontNameToFontFamily}}" 
					  FontWeight="{Binding Settings.ListFontModifier, Converter={conv:FontModifierToFontWeight}}" 
					  FontStyle="{Binding Settings.ListFontModifier, Converter={conv:FontModifierToFontStyle}}">

			<ListView.ContextMenu>
				<ContextMenu>
					<self:AutoActionMenuItem Header="Export" AlephAction="ExportNote" ParentAnchor="{Binding ParentAnchor}" />
					<self:AutoActionMenuItem Header="Delete" AlephAction="DeleteNote" ParentAnchor="{Binding ParentAnchor}" />
				</ContextMenu>
			</ListView.ContextMenu>

			<ListBox.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				</Style>
			</ListBox.ItemContainerStyle>

			<!-- ReSharper disable Xaml.RedundantResource -->
			<services:MultiDataTemplateService.MultiDataTemplate>

				<services:ConditionalDataTemplate Value="{x:Static settings:NotePreviewStyle.Simple}">
					<DataTemplate >
						<Grid d:DataContext="{d:DesignInstance pi:INote}">
							<TextBlock Text="{Binding Title, Converter={conv:StringCoalesce}, ConverterParameter='New Note...', Mode=OneWay}" TextTrimming="CharacterEllipsis" />
						</Grid>
					</DataTemplate>
				</services:ConditionalDataTemplate>

				<services:ConditionalDataTemplate Value="{x:Static settings:NotePreviewStyle.Extended}">
					<DataTemplate>
						<Grid d:DataContext="{d:DesignInstance pi:INote}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="3" />
							</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0" Text="{Binding Title, Converter={conv:StringCoalesce}, ConverterParameter='New Note...', Mode=OneWay}" TextTrimming="CharacterEllipsis" />
							<TextBlock Grid.Column="1" Text="{Binding ModificationDate, Converter={conv:SmallDateTimeToDisplay}, Mode=OneWay}" VerticalAlignment="Center" Foreground="DimGray" >
								<TextBlock.LayoutTransform>
									<ScaleTransform ScaleX="0.9" ScaleY="0.9" />
								</TextBlock.LayoutTransform>
							</TextBlock>
						</Grid>
					</DataTemplate>
				</services:ConditionalDataTemplate>

				<services:ConditionalDataTemplate Value="{x:Static settings:NotePreviewStyle.FullPreview}">
					<DataTemplate>
						<Grid d:DataContext="{d:DesignInstance pi:INote}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0" FontWeight="Bold" FontStyle="Normal" Foreground="Black" Text="{Binding Title, Converter={conv:StringCoalesce}, ConverterParameter='New Note...', Mode=OneWay}" TextTrimming="CharacterEllipsis" />
							<TextBlock Grid.Row="1" TextWrapping="NoWrap">
									<Run Foreground="Brown" FontWeight="Normal" FontStyle="Normal" Text="{Binding ModificationDate, Converter={conv:SmallDateTimeToDisplay}, Mode=OneWay}" />
									<Run Foreground="DarkGray" FontWeight="Normal" FontStyle="Normal" Text="{Binding Text, Converter={conv:GetLine}, ConverterParameter=0, Mode=OneWay}" />
							</TextBlock>
							<TextBlock Grid.Row="2" TextWrapping="NoWrap">
									<Run Foreground="DarkGray" FontWeight="Normal" FontStyle="Normal" Text="{Binding Text, Converter={conv:GetLine}, ConverterParameter=1, Mode=OneWay}" />
							</TextBlock>
							<TextBlock Grid.Row="3" TextWrapping="NoWrap">
									<Run Foreground="DarkGray" FontWeight="Normal" FontStyle="Normal" Text="{Binding Text, Converter={conv:GetLine}, ConverterParameter=2, Mode=OneWay}" />
							</TextBlock>
							<Separator Grid.Row="4" Background="Snow" Margin="6,7,6,7" />
						</Grid>
					</DataTemplate>
				</services:ConditionalDataTemplate>

			</services:MultiDataTemplateService.MultiDataTemplate>
			<!-- ReSharper restore Xaml.RedundantResource -->

		</ListView>



	</Grid>
</UserControl>
